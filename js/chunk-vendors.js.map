{"version":3,"sources":["webpack:///../node_modules/vue-router/dist/vue-router.esm-bundler.js","webpack:///../node_modules/axios/lib/helpers/isAxiosError.js","webpack:///../node_modules/axios/lib/cancel/CancelToken.js","webpack:///../node_modules/axios/lib/core/enhanceError.js","webpack:///D:/Users/Asus/Schwarzschild/node_modules/node-libs-browser/mock/process.js","webpack:///../node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///../node_modules/axios/lib/axios.js","webpack:///../node_modules/axios/lib/core/mergeConfig.js","webpack:///../node_modules/axios/lib/core/settle.js","webpack:///../node_modules/axios/lib/defaults.js","webpack:///../node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///../node_modules/axios/index.js","webpack:///../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///../node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///../node_modules/axios/lib/cancel/isCancel.js","webpack:///../node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///../node_modules/axios/lib/helpers/buildURL.js","webpack:///../node_modules/axios/lib/core/dispatchRequest.js","webpack:///../node_modules/axios/lib/helpers/combineURLs.js","webpack:///../node_modules/axios/lib/core/buildFullPath.js","webpack:///D:/Users/Asus/Schwarzschild/node_modules/path-browserify/index.js","webpack:///../node_modules/axios/lib/core/InterceptorManager.js","webpack:///(webpack)/buildin/global.js","webpack:///../node_modules/axios/lib/utils.js","webpack:///../node_modules/axios/lib/cancel/Cancel.js","webpack:///../node_modules/axios/lib/core/Axios.js","webpack:///../node_modules/axios/lib/helpers/cookies.js","webpack:///../node_modules/axios/lib/helpers/parseHeaders.js","webpack:///../node_modules/axios/lib/adapters/xhr.js","webpack:///../node_modules/axios/lib/core/createError.js","webpack:///../node_modules/axios/lib/core/transformData.js","webpack:///../node_modules/axios/lib/helpers/bind.js","webpack:///../node_modules/axios/lib/helpers/spread.js","webpack:///../node_modules/axios/lib/helpers/normalizeHeaderName.js"],"names":["hasSymbol","Symbol","toStringTag","PolySymbol","name","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","isBrowser","window","isESModule","obj","__esModule","assign","Object","applyToParams","fn","params","newParams","key","value","Array","isArray","map","noop","TRAILING_SLASH_RE","removeTrailingSlash","path","replace","parseURL","parseQuery","location","currentLocation","query","searchString","hash","searchPos","indexOf","hashPos","slice","length","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","pathname","base","toLowerCase","isSameRouteLocation","a","b","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","keys","isSameRouteLocationParamsValue","isEquivalentArray","every","i","to","from","startsWith","fromSegments","split","toSegments","toPosition","segment","position","join","NavigationType","NavigationDirection","normalizeBase","baseEl","document","querySelector","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","el","offset","docRect","documentElement","getBoundingClientRect","elRect","behavior","left","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","style","scrollTo","getScrollKey","delta","history","state","scrollPositions","Map","saveScrollPosition","scrollPosition","set","getSavedScrollPosition","scroll","get","delete","createBaseLocation","protocol","host","createCurrentLocation","search","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","forEach","listener","type","pop","direction","forward","back","unknown","pauseListeners","listen","callback","push","teardown","index","splice","beforeUnloadListener","replaceState","destroy","removeEventListener","addEventListener","buildState","current","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","url","err","console","error","data","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","bind","defineProperty","createWebHashHistory","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","undefined","meta","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","Error","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","start","end","REGEX_CHARS_RE","tokensToParser","segments","extraOptions","options","score","pattern","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","RegExp","message","subPattern","parse","match","stringify","avoidDuplicatedSlash","endsWith","param","text","compareScoreArray","diff","comparePathParserScore","aScore","bScore","comp","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","buffer","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","test","createRouteRecordMatcher","record","parent","parser","matcher","children","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","mergeOptions","normalizedRecords","aliases","components","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","resolve","paramsFromLocation","filter","k","find","m","parentMatcher","unshift","mergeMetaFields","redirect","beforeEnter","props","normalizeRecordProps","instances","leaveGuards","Set","updateGuards","enterCallbacks","default","component","propsObject","reduce","defaults","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeURI","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","searchParam","eqPos","currentValue","values","v","normalizeQuery","normalizedQuery","useCallbacks","handlers","add","handler","reset","list","guardToPromiseFn","guard","enterCallbackArray","Promise","reject","next","valid","guardReturn","call","guardCall","then","catch","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","__vccOpts","componentPromise","resolved","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","findIndex","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","e","guardEvent","href","RouterLinkImpl","String","required","Boolean","activeClass","exactActiveClass","custom","ariaCurrentValue","slots","attrs","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","class","RouterLink","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","target","preventDefault","outer","inner","innerValue","outerValue","some","propClass","globalClass","defaultClass","RouterViewImpl","inheritAttrs","injectedRoute","routeToDisplay","depth","matchedRouteRef","viewRef","instance","oldInstance","oldName","flush","matchedRoute","ViewComponent","currentName","normalizeSlot","Component","routePropsOption","routeProps","onVnodeUnmounted","vnode","isUnmounted","ref","slot","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","failure","handleScroll","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","markAsReady","removeHistoryListener","setupListeners","_from","info","ready","readyHandlers","errorHandlers","isReady","started","installedApps","beforeEach","beforeResolve","afterEach","onError","app","this","config","globalProperties","$router","reactiveRoute","provide","unmountApp","unmount","size","arguments","promise","len","Math","max","recordFrom","recordTo","module","exports","payload","isAxiosError","Cancel","CancelToken","executor","TypeError","resolvePromise","reason","prototype","throwIfRequested","source","cancel","c","code","request","response","toJSON","description","number","fileName","lineNumber","columnNumber","stack","nextTick","args","shift","setTimeout","apply","platform","arch","execPath","title","pid","browser","env","argv","binding","cwd","chdir","dir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","utils","Axios","mergeConfig","createInstance","defaultConfig","context","extend","axios","create","instanceConfig","isCancel","all","promises","spread","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","merge","mergeDeepProperties","prop","isUndefined","axiosKeys","concat","otherKeys","createError","validateStatus","status","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","getDefaultAdapter","adapter","XMLHttpRequest","process","toString","transformRequest","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","isURLSearchParams","isObject","JSON","transformResponse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","common","method","isStandardBrowserEnv","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","setAttribute","hostname","port","charAt","requestURL","parsed","isString","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","raw","effect","createReactiveEffect","lazy","stop","active","onStop","uid","scheduler","includes","enableTracking","resetTracking","id","allowRecurse","deps","shouldTrack","trackStack","pauseTracking","last","track","depsMap","dep","has","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","run","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","res","isRef","shouldUnwrap","readonly","reactive","arr","toRaw","l","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","proto","set$1","deleteEntry","clear","hadItems","createForEach","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","convert","val","r","__v_isRef","createRef","shallowRef","_rawValue","_shallow","_value","newVal","rawValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","toRef","object","ComputedRefImpl","getter","_setter","_dirty","getterOrOptions","setter","callWithErrorHandling","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","p","findInsertionIndex","job","jobId","getId","middle","middleJobId","queueJob","pos","queueFlush","flushJobs","invalidateJob","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","Infinity","event","rawArgs","isModelListener","modelArg","modifiersKey","trim","handlerName","onceHandler","emitted","normalizeEmitsOptions","asMixin","deopt","__emits","emits","normalized","hasExtends","extendEmits","mixins","extends","isEmitListener","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","withProxy","propsOptions","emit","render","renderCache","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","filterModelListeners","cloneVNode","dirs","transition","createVNode","Comment","filterSingleRoot","singleRoot","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","normalizeSuspenseSlot","s","singleChild","queueEffectWithSuspense","suspense","pendingBranch","isRenderingCompiledSlot","setCompiledSlotRendering","n","withCtx","renderFnWithContext","openBlock","owner","closeBlock","_c","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","initProps","rawProps","isStateful","isSSR","InternalObjectKey","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","booleanIndex","getTypeIndex","stringIndex","getType","ctor","isSameType","expectedTypes","injectHook","hook","currentInstance","prepend","hooks","wrappedHook","__weh","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","INITIAL_WATCHER_VALUE","watch","doWatch","immediate","deep","onTrack","onTrigger","cleanup","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove","isKeepAlive","ssContent","clone","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","__isKeepAlive","matches","onActivated","registerKeepAliveHook","onDeactivated","__wdc","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","_","updateSlots","needDeletionCheck","deletionComparisonTarget","invokeDirectiveHook","bindings","oldBindings","createAppContext","isNativeTag","performance","optionMergeStrategies","isCustomElement","warnHandler","directives","provides","createAppAPI","hydrate","rootComponent","rootProps","installedPlugins","_uid","_component","_props","_container","_context","version","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","initFeatureFlags","defineComponent","setup","isAsyncWrapper","__asyncLoader","prodEffectOptions","setRef","rawRef","oldRawRef","parentSuspense","exposed","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","isSVG","getNextHostNode","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","scopeId","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","onVnodeMounted","enter","treeOwnerId","__scopeId","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","hydrateNode","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","ch1","ch2","arrI","isTeleport","__isTeleport","disabled","COMPONENTS","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","getComponentName","registry","blockStack","currentBlock","disableTracking","createBlock","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","klass","targetAnchor","staticCount","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","flag","createStaticVNode","numberOfNodes","createCommentVNode","asBlock","slotFlag","toMerge","existing","incoming","parentProvides","inject","treatDefaultAsFactory","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","methodHandler","dataFn","resolveData","enumerable","configurable","createWatcher","callHookFromMixins","callHookFromExtends","selfHook","baseHook","chainedMixins","createPathGetter","resolveMergedOptions","__merged","strats","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","da","rtg","rtc","compile","setupResult","setupStatefulComponent","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","template","delimiters","_rc","displayName","h","propsOrChildren","renderList","renderItem","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","selector","temp","innerHTML","first","firstChild","patchClass","transitionClasses","_vtc","className","patchStyle","display","cssText","setStyle","removeAttribute","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","cached","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","_getNow","Date","now","createEvent","timeStamp","cachedNow","getNow","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","keyNames","esc","space","up","right","down","withKeys","modifiers","eventKey","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","Element","__CANCEL__","makeMap","str","expectsLowerCase","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","item","parseStringStyle","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","toDisplayString","replacer","isMap","entries","isSet","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","toHandlerKey","hasChanged","invokeArrayFns","fns","arg","def","toNumber","parseFloat","isNaN","encode","encodeURIComponent","paramsSerializer","serializedParams","parts","toISOString","hashmarkIndex","transformData","throwIfCancellationRequested","cancelToken","baseURL","relativeURL","isAbsoluteURL","combineURLs","requestedURL","normalizeArray","allowAboveRoot","basename","matchedSlash","charCodeAt","xs","f","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSlash","substr","paths","relative","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","hasRoot","ext","extname","startDot","startPart","preDotState","InterceptorManager","use","fulfilled","rejected","eject","g","constructor","FormData","ArrayBuffer","isView","isNumber","pipe","URLSearchParams","product","assignValue","stripBOM","buildURL","dispatchRequest","interceptors","chain","interceptor","getUri","write","expires","domain","secure","cookie","toGMTString","read","ignoreDuplicateOf","line","settle","cookies","buildFullPath","parseHeaders","isURLSameOrigin","requestData","requestHeaders","auth","username","password","unescape","Authorization","btoa","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","onUploadProgress","upload","abort","send","enhanceError","normalizedName"],"mappings":"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","file":"js/chunk-vendors.js","sourcesContent":["/*!\n  * vue-router v4.0.4\n  * (c) 2021 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash based url\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        let pathFromHash = hash.slice(1);\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    let currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/vue-router-next/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (base.indexOf('#') < 0)\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        let eqPos = searchParam.indexOf('=');\r\n        let key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        let value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        if (search.length)\r\n            search += '&';\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined)\r\n                search += key;\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        for (let i = 0; i < values.length; i++) {\r\n            // only append & with i > 0\r\n            search += (i ? '&' : '') + key;\r\n            if (values[i] != null)\r\n                search += ('=' + values[i]);\r\n        }\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-ignore: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    let promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                else {\r\n                    // display the error if any\r\n                    componentPromise = componentPromise.catch(console.error);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    let options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e))\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));\r\n        return Promise.resolve();\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    setup(props, { slots, attrs }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', assign({\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    onClick: link.navigate,\r\n                    href: link.href,\r\n                }, attrs, {\r\n                    class: elClass.value,\r\n                }), children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-ignore getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-ignore getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    to.leaveGuards = from.leaveGuards;\r\n                    to.updateGuards = from.updateGuards;\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nfunction getTarget() {\n    // @ts-ignore\n    return typeof navigator !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\n\nconst HOOK_SETUP = 'devtools-plugin:setup';\n\nfunction setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const hook = getDevtoolsGlobalHook();\n    if (hook) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const target = getTarget();\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor,\n            setupFn\n        });\n    }\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'Router' + (id ? ' ' + id : ''),\r\n        label: 'Vue Router',\r\n        app,\r\n    }, api => {\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            // @ts-ignore\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError(error => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    // @ts-ignore\r\n                    logType: 'error',\r\n                    time: Date.now(),\r\n                    data: { error },\r\n                },\r\n            });\r\n        });\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    meta: {},\r\n                    data,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    data,\r\n                    // @ts-ignore\r\n                    logType: failure ? 'warning' : 'default',\r\n                    meta: {},\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = String(routeRecordId++);\r\n    record.__vd_id = id;\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        // @ts-ignore\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (let key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-ignore\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let routerHistory = options.history;\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.indexOf('?') > -1 ||\r\n                        newTargetLocation.indexOf('#') > -1\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : { path: newTargetLocation };\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? error\r\n            : // reject any unknown error\r\n                triggerError(error))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-ignore\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-ignore\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords,] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && from.matched.indexOf(record) < 0) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            let toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    ).catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure && info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     * @param error - error to throw\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error) {\r\n        markAsReady(error);\r\n        errorHandlers.list().forEach(handler => handler(error));\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(triggerError);\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-ignore: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp.call(this, arguments);\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && true) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.indexOf(recordFrom) < 0)\r\n                leavingRecords.push(recordFrom);\r\n            else\r\n                updatingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (from.matched.indexOf(recordTo) < 0)\r\n                enteringRecords.push(recordTo);\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","module.exports = require('./lib/axios');","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */, [\r\n                    instance && instance.proxy\r\n                ]);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */, [\r\n                instance && instance.proxy\r\n            ]);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode || isAsyncWrapper(vnode)) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.exposed || vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            // special self referencing call generated by compiler\r\n            // inferred from SFC filename\r\n            if (name === `_self`) {\r\n                return Component;\r\n            }\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return i.exposed ? i.exposed : i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get props() {\r\n                return instance.props;\r\n            },\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.7\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCustomElementCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const value = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return value;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is only respected when using the runtime compiler.` +\r\n                    `If you are using the runtime-only build, \\`isCustomElement\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead` +\r\n                    `- for example, via the \\`compilerOptions\\` option in vue-loader: https://vue-loader.vuejs.org/options.html#compileroptions.`);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n"],"sourceRoot":""}