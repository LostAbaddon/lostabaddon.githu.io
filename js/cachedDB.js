(()=>{class f{constructor(e,r){this._name=e,this._version=r,this.conn=null,this.db=null,this.cbUpdates=[],this.cbConnects=[],this.caches={},this.ready=!1,this.available=!1}connect(){return new Promise((e,r)=>{this.conn=indexedDB.open(this.name,this.version),this.conn.onupgradeneeded=n=>{this.db=this.conn.result,this.cbUpdates.forEach(t=>t(this))},this.conn.onsuccess=n=>{this.ready=!0,this.available=!0,this.db=this.conn.result,this.cbConnects.forEach(t=>t(this)),e(this)},this.conn.onerror=n=>{this.ready=!0,this.available=!1,r(n)}})}onConnect(e){this.cbConnects.push(e)}onUpdate(e){this.cbUpdates.push(e)}open(e,r="id",n=0,t){if(!this.db.objectStoreNames.contains(e)){let c=this.db.createObjectStore(e,{keyPath:r});c.createIndex(r,r,{unique:!0}),!!t&&t.length>0&&t.forEach(a=>{c.createIndex(a,a,{unique:!1})})}n>0&&this.cache(r,n)}cache(e,r){this.caches[e]||(this.caches[e]=new LRUCache(r))}set(e,r,n){return new Promise((t,c)=>{var a=this.db.transaction([e],"readwrite");a||c(new Error("Open IndexedDB Transaction Failed: "+e));var h=a.objectStore(e);e||c(new Error("Open IndexedDB ObjectStore Failed: "+e));var s={};[...h.indexNames].forEach(d=>{s[d]=n[d]}),s[h.keyPath]=r,s.data=n;var i=h.put(s);i.onsuccess=d=>{var o=this.caches[e];o&&o.set(r,n),t(d.result)},i.onerror=d=>{c(d)}})}get(e,r){return new Promise((n,t)=>{var c=this.db.transaction([e],"readonly");c||t(new Error("Open IndexedDB Transaction Failed: "+e));var a=c.objectStore(e);e||t(new Error("Open IndexedDB ObjectStore Failed: "+e));var h=a.index(a.keyPath),s=this.caches[e],i;if(s&&(i=s.get(r),i!==void 0))return n(i);i=h.get(r),i.onsuccess=d=>{d.target.result?n(d.target.result.data):n(void 0)},i.onerror=d=>{t(d)}})}all(e,r){return new Promise((n,t)=>{var c=this.db.transaction([e],"readonly");c||t(new Error("Open IndexedDB Transaction Failed: "+e));var a=c.objectStore(e);e||t(new Error("Open IndexedDB ObjectStore Failed: "+e));var h;try{h=a.index(r||a.keyPath)}catch(i){t(i);return}var s=h.getAll();s.onsuccess=i=>{var d=i.target.result;if(!d)return n(d);var o=!r||r===a.keyPath,l=o?{}:[];d.forEach(u=>{o?l[u[a.keyPath]]=u.data:l.push(u.data)}),n(l)},s.onerror=i=>{t(i)}})}del(e,r){return new Promise((n,t)=>{var c=this.db.transaction([e],"readwrite");c||t(new Error("Open IndexedDB Transaction Failed: "+e));var a=c.objectStore(e);e||t(new Error("Open IndexedDB ObjectStore Failed: "+e));var h=a.delete(r);h.onsuccess=s=>{var i=this.caches[e];i&&i.del(r),n(s.result)},h.onerror=s=>{t(s)}})}clear(e){return new Promise((r,n)=>{var t=this.db.transaction([e],"readwrite");t||n(new Error("Open IndexedDB Transaction Failed: "+e));var c=t.objectStore(e);e||n(new Error("Open IndexedDB ObjectStore Failed: "+e));var a=c.clear();a.onsuccess=h=>{var s=this.caches[e];s&&s.clear(),r(h.result)},a.onerror=h=>{n(h)}})}clearCache(e){var r=this.caches[e];!r||r.clear()}get name(){return this._name}get version(){return this._version}}self.CachedDB=f})();
