var requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame;requestAnimationFrame||(requestAnimationFrame=h=>setTimeout(h,60));const getNeighbors=(h,s,n,t,a)=>{var e=[],i=[];return h===0?s===0?(e.push([0,1]),e.push([1,0]),i.push([1,1]),a&&(e.push([0,t-1]),e.push([n-1,0]),i.push([n-1,t-1]),i.push([1,t-1]),i.push([n-1,1]))):s===t-1?(e.push([0,t-2]),e.push([1,t-1]),i.push([1,t-2]),a&&(e.push([0,0]),e.push([n-1,t-1]),i.push([1,0]),i.push([n-1,t-2]),i.push([n-1,0]))):(e.push([0,s-1]),e.push([0,s+1]),e.push([1,s]),i.push([1,s-1]),i.push([1,s+1]),a&&(e.push([n-1,s]),i.push([n-1,s-1]),i.push([n-1,s+1]))):h===n-1?s===0?(e.push([n-1,1]),e.push([n-2,0]),i.push([n-2,t-1]),a&&(e.push([0,0]),e.push([n-1,t-1]),i.push([0,1]),i.push([n-2,1]),i.push([0,t-1]))):s===t-1?(e.push([n-2,t-1]),e.push([n-1,t-2]),i.push([n-2,t-2]),a&&(e.push([0,t-1]),e.push([n-1,0]),i.push([0,0]),i.push([0,t-2]),i.push([n-2,0]))):(e.push([n-1,s-1]),e.push([n-1,s+1]),e.push([n-2,s]),i.push([n-2,s-1]),i.push([n-2,s+1]),a&&(e.push([0,s]),i.push([0,s-1]),i.push([0,s+1]))):s===0?(e.push([h-1,0]),e.push([h+1,0]),e.push([h,1]),i.push([h-1,1]),i.push([h+1,1]),a&&(e.push([h,t-1]),i.push([h-1,t-1]),i.push([h+1,t-1]))):s===t-1?(e.push([h-1,t-1]),e.push([h+1,t-1]),e.push([h,t-2]),i.push([h-1,t-2]),i.push([h+1,t-2]),a&&(e.push([h,0]),i.push([h-1,0]),i.push([h+1,0]))):(e.push([h,s-1]),e.push([h,s+1]),e.push([h-1,s]),e.push([h+1,s]),i.push([h-1,s-1]),i.push([h-1,s+1]),i.push([h+1,s-1]),i.push([h+1,s+1])),[e,i]};class Grass{constructor(s,n){this.width=s,this.height=n,this.grasses=[];for(let t=0;t<s;t++){let a=[];for(let e=0;e<n;e++)a[e]=Grass.Max;this.grasses[t]=a}}_evolute(s,n){var t=this.grasses[s][n],[a,e]=getNeighbors(s,n,this.width,this.height,Grass.CycleBoard),i=0,v=0;a.forEach(([o,d])=>{i+=this.grasses[o][d]}),i/=a.length,e.forEach(([o,d])=>{v+=this.grasses[o][d]}),v/=e.length;var g=(i+v/Grass.Coef)/(1+1/Grass.Coef);return g-=t,g*=Grass.Rate,Math.round(g)}evolute(){var s=[],n=0;for(let t=0;t<this.width;t++){let a=[],e=this.grasses[t];for(let i=0;i<this.height;i++){let v=e[i];v+=this._evolute(t,i),v+=Grass.Grow,v>=Grass.Max?v=Grass.Max:(n++,v<0&&(v=0)),a[i]=v}s[t]=a}return this.grasses=s,n}getColor(s,n){var t=this.grasses[s][n]/Grass.Max,a=[];return a[0]=Math.round(Grass.Color[0]*t),a[1]=Math.round(Grass.Color[1]*t),a[2]=Math.round(Grass.Color[2]*t),a}}Grass.Max=100,Grass.Grow=2,Grass.Rate=.3,Grass.Coef=Math.sqrt(2),Grass.CycleBoard=!0,Grass.Color=[104,184,142];class Gene{constructor(s){this.code=[...s],this.birth=[],this.alive=[],this.code.forEach(n=>{n>0?this.birth.push(n):this.alive.push(0-n)}),this.attack=8-this.alive.length,this.defence=this.birth.length,this.power=s.length}}Gene.Cost=3;class DNA{constructor(s,n){this.color="rgb("+s.join(",")+")",this.power=0,this.genes=n.map(t=>(t=new Gene(t),this.power+=t.power,t))}}class Life{constructor(s){this.dna=s,this.dnaLevel=s.genes.length,this.step=0,this.energy=0}getAttack(){return this.dna.genes[this.step%this.dnaLevel].attack}getDefence(){return this.dna.genes[this.step%this.dnaLevel].defence}getPower(){return this.dna.genes[this.step%this.dnaLevel].power*Gene.Cost}getColor(){return this.dna.color}canBirth(s){var n=this.dna.genes[this.step%this.dnaLevel];return n.birth.includes(s)}canAlive(s){var n=this.dna.genes[this.step%this.dnaLevel];return n.alive.includes(s)}}class Colony{constructor(s,n){this.width=s,this.height=n,this.grid=[];for(let t=0;t<s;t++){let a=[];for(let e=0;e<n;e++)a[e]=null;this.grid[t]=a}}add(s,n,t){this.grid[s][n]=new Life(t)}evolute(s){var n=[],t=0;for(let a=0;a<this.width;a++){let e=[],i=this.grid[a],v=s.grasses[a];for(let g=0;g<this.height;g++){let o=i[g],[d,M]=getNeighbors(a,g,this.width,this.height,Grass.CycleBoard),B=[];d.forEach(([c,f])=>{var b=this.grid[c][f];!b||B.push(b)}),M.forEach(([c,f])=>{var b=this.grid[c][f];!b||B.push(b)});let T=B.length;if(T===0&&!o)continue;let k=new Map;B.forEach(c=>{var f=k.get(c.dna);f||(f=[],k.set(c.dna,f)),f.push(c)});let C=[];for(let c of k){let[f,b]=c,S=0,r=0,l=b.length,u=-1;!!o&&o.dna===f&&(S=o.getAttack(),r=o.getDefence()),b.forEach(p=>{if(o){if(o.dna===f){if(!p.canAlive(T))return}else if(!p.canBirth(l))return}else if(!p.canBirth(l))return;S+=p.getAttack(),r+=p.getDefence(),p.step>u&&(u=p.step)}),!(u<0)&&C.push([S,r,u,f])}if(!!o&&!k.get(o.dna)&&o.canAlive(T)&&C.push([o.getAttack(),o.getDefence(),o.step,o.dna]),k.clear(),C.sort((c,f)=>f[0]>c[0]?1:f[0]<c[0]?-1:f[1]>c[1]?1:f[1]<c[1]?-1:f[2]>c[2]?1:f[2]<c[2]||f[3].power>c[3].power?-1:f[3].power<c[3].power?1:0),C.length===0)continue;C=C[0];let F=o?o.energy+1:1;o=new Life(C[3]),o.step=C[2],o.energy=F;let W=(o.step+1)%o.dnaLevel,O=o.dna.genes[W];o.energy>=O.power&&(o.step++,o.energy=0);let D=v[g],q=o.getPower();if(q>D){v[g]=0;continue}v[g]-=q,t++,e[g]=o}n[a]=e}return this.grid=n,t}}(h=>{const s=1e3,n=200;var t=!1,a,e,i,v,g,o=100,d=100,M=10;const B=()=>{T(0,0,o,d,"black",!0)},T=(r,l,u,p,m="white",L=!1,E=2)=>{r*=M,l*=M,u*=M,p*=M,L?(e.fillStyle=m,e.fillRect(r,l,u-r,p-l)):(e.beginPath(),e.moveTo(r,l),e.lineTo(r,p),e.lineTo(u,p),e.lineTo(u,l),e.lineTo(r,l),e.closePath(),e.strokeStyle=m,e.lineWidth=E,e.stroke())},k=(r,l,u,p,m="white",L=1)=>{r*=M,l*=M,u*=M,p*=M,e.beginPath(),e.moveTo(r,l),e.lineTo(u,p),e.closePath(),e.strokeStyle=m,e.lineWidth=L,e.stroke()},C=(r,l,u="white")=>{r=(r+.5)*M,l=(l+.5)*M,e.beginPath(),e.arc(r,l,M/2,0,2*Math.PI),e.fillStyle=u,e.fill()},F=()=>{T(0,0,o,d);for(let r=0;r<o;r++)k(r,0,r,d,"white",.2);for(let r=0;r<d;r++)k(0,r,o,r,"white",.2)},W=()=>{for(let r=0;r<o;r++)for(let l=0;l<d;l++){let u=v.getColor(r,l);T(r,l,r+1,l+1,"rgb("+u.join(",")+")",!0)}},O=()=>{for(let r=0;r<o;r++){let l=g.grid[r];for(let u=0;u<d;u++){let p=l[u];if(!p)continue;let m=p.getColor();C(r,u,m)}}},D=()=>{W(),F(),O()},q=()=>{var r=window.innerWidth,l=window.innerHeight-n;r>s&&(r=s);var u=r/o*d;l>u?l=u:r=l/d*o,a.width=o*M,a.height=d*M,a.style.width=r+"px",a.style.height=l+"px",a.w=r,a.h=l,e=a.getContext("2d",{alpha:!1}),D()},c=()=>{if(!!t){var r=g.evolute(v);if(r+=v.evolute(),D(),r===0){console.log("Game Over!"),t=!1,i.innerHTML="\u5F00\u59CB";return}requestAnimationFrame(c)}},f=()=>{var r=[];return r[0]=Math.floor(Math.random()*256),r[1]=Math.floor(Math.random()*256),r[2]=Math.floor(Math.random()*256),r},b=(r,l,u)=>{var p=newEle("div","line");p._index=u.length;var m=newEle("span","hint");m.innerText="\u57FA\u56E0\u578B";var L=newEle("span","inputter");L.setAttribute("contentEditable",!0),L.innerText=JSON.stringify(l),p.appendChild(m),p.appendChild(L),r.appendChild(p);var E=f();u.push([E,L,"rgb("+E.join(",")+")"])};PageBroadcast.on("page-resize",(r,l)=>{q()});const S={};S.onLeave=()=>{console.log("UltraLife : Leave"),t=!1},S.init=(r,l,u,p)=>{a=r.querySelector("canvas"),v=new Grass(o,d),g=new Colony(o,d),i=l;var m=[],L=-1,E={},R={};i.addEventListener("click",()=>{if(t)t=!1,i.innerHTML="\u5F00\u59CB";else{t=!0,i.innerHTML="\u6682\u505C";let P=[];m.forEach((w,A)=>{var N=w[1].innerText;try{N=JSON.parse(N)}catch{return}var j=JSON.stringify(N),H=R[j];H||(H=new DNA(f(),N),R[j]=H),P[A]=H});for(let w in E){let[A,N,j]=E[w];if(j=P[j],!j)return;g.add(A,N,j)}E={},requestAnimationFrame(c)}}),p.addEventListener("click",P=>{var w=P.target;if(w.tagName==="SPAN")w=w.parentNode;else if(w.tagName!=="DIV")return;[].forEach.call(p.querySelectorAll("div.line.selected"),A=>{A.classList.remove("selected")}),w.classList.add("selected"),L=w._index}),a.addEventListener("mousedown",P=>{if(!(L<0)){var w=P.offsetX,A=P.offsetY;w=Math.floor(w/a.w*o),A=Math.floor(A/a.h*d),C(w,A,m[L][2]),E[w+"-"+A]=[w,A,L]}}),b(p,[[3,-2,-3]],m),b(p,[[3,-2,-3],[3,4,-2,-3,-4],[3,-2,-3,-4],[3,4,-2,-3]],m),q()},h.UltraLife=S})(window);
